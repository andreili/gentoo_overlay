diff '--color=auto' -Naur OrcaSlicer-2.1.1_or/src/clipper2/Clipper2Lib/include/clipper2/clipper.core.h OrcaSlicer-2.1.1/src/clipper2/Clipper2Lib/include/clipper2/clipper.core.h
--- OrcaSlicer-2.1.1_or/src/clipper2/Clipper2Lib/include/clipper2/clipper.core.h        2024-08-06 21:34:19.517462360 +0200
+++ OrcaSlicer-2.1.1/src/clipper2/Clipper2Lib/include/clipper2/clipper.core.h   2024-08-06 21:35:28.980051026 +0200
@@ -114,7 +114,7 @@
 	Point(const T2 x_, const T2 y_) { Init(x_, y_); }
 
 	template <typename T2>
-	explicit Point<T>(const Point<T2>& p) { Init(p.x, p.y); }
+	explicit Point(const Point<T2>& p) { Init(p.x, p.y); }
 
 	Point operator * (const double scale) const
 	{
diff '--color=auto' -Naur OrcaSlicer-nightly-builds_or/src/slic3r/GUI/PhysicalPrinterDialog.cpp OrcaSlicer-nightly-builds/src/slic3r/GUI/PhysicalPrinterDialog.cpp
--- OrcaSlicer-nightly-builds_or/src/slic3r/GUI/PhysicalPrinterDialog.cpp       2025-01-15 08:43:33.503222625 +0100
+++ OrcaSlicer-nightly-builds/src/slic3r/GUI/PhysicalPrinterDialog.cpp  2025-01-15 19:56:33.947842341 +0100
@@ -374,7 +374,7 @@
     // Always fill in the "printhost_port" combo box from the config and select it.
     {
         Choice* choice = dynamic_cast<Choice*>(m_optgroup->get_field("printhost_port"));
-        choice->set_values({ m_config->opt_string("printhost_port") });
+        choice->set_values(std::vector<std::string>({ m_config->opt_string("printhost_port") }));
         choice->set_selection();
     }

diff '--color=auto' -Naur OrcaSlicer-nightly-builds_or/src/libslic3r/CMakeLists.txt OrcaSlicer-nightly-builds/src/libslic3r/CMakeLists.txt
--- OrcaSlicer-nightly-builds_or/src/libslic3r/CMakeLists.txt   2025-01-15 08:43:33.496555798 +0100
+++ OrcaSlicer-nightly-builds/src/libslic3r/CMakeLists.txt      2025-01-16 09:13:06.347245982 +0100
@@ -520,6 +520,8 @@
 set(OpenCASCADE_DIR "${CMAKE_PREFIX_PATH}/lib/cmake/occt")
 find_package(OpenCASCADE REQUIRED)
 target_include_directories(libslic3r PUBLIC ${OpenCASCADE_INCLUDE_DIR})
+find_package(OpenCV REQUIRED)
+include_directories(${OpenCV_INCLUDE_DIRS})
 
 find_package(JPEG REQUIRED)
 
--- OrcaSlicer-nightly-builds_or/src/slic3r/CMakeLists.txt      2025-01-15 08:43:33.506556037 +0100
+++ OrcaSlicer-nightly-builds/src/slic3r/CMakeLists.txt 2025-01-16 09:13:45.512411923 +0100
@@ -2,6 +2,8 @@
 project(libslic3r_gui)
 
 include(PrecompiledHeader)
+find_package(OpenCV REQUIRED)
+include_directories(${OpenCV_INCLUDE_DIRS})
 
 set(SLIC3R_GUI_SOURCES
     pchheader.cpp
diff '--color=auto' -Naur OrcaSlicer_or/src/slic3r/Config/Version.cpp OrcaSlicer/src/slic3r/Config/Version.cpp
--- OrcaSlicer_or/src/slic3r/Config/Version.cpp	2024-08-07 20:51:23.938272555 +0200
+++ OrcaSlicer/src/slic3r/Config/Version.cpp	2024-08-07 20:51:41.598063915 +0200
@@ -3,6 +3,7 @@
 #include <cctype>
 
 #include <boost/filesystem/operations.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/nowide/fstream.hpp>
 
 #include "libslic3r/libslic3r.h"
diff '--color=auto' -Naur OrcaSlicer-2.1.1_or/src/libslic3r/CMakeLists.txt OrcaSlicer-2.1.1/src/libslic3r/CMakeLists.txt
--- OrcaSlicer-2.1.1_or/src/libslic3r/CMakeLists.txt	2024-08-07 21:02:29.347237569 +0200
+++ OrcaSlicer-2.1.1/src/libslic3r/CMakeLists.txt	2024-08-07 22:16:05.859877170 +0200
@@ -520,11 +520,7 @@
 find_package(JPEG REQUIRED)
 
 set(OCCT_LIBS
-    TKXDESTEP
-    TKSTEP
-    TKSTEP209
-    TKSTEPAttr
-    TKSTEPBase
+    TKDESTEP
     TKXCAF
     TKXSBase
     TKVCAF
@@ -573,7 +573,7 @@
     mcut
     JPEG::JPEG
     qoi
-    opencv_world
+    opencv_gapi
     )
 
 if(NOT WIN32)
diff '--color=auto' -Naur orcaslicer-9999_or/src/CMakeLists.txt orcaslicer-9999/src/CMakeLists.txt
--- orcaslicer-9999_or/src/CMakeLists.txt       2025-01-19 16:04:20.905223434 +0100
+++ orcaslicer-9999/src/CMakeLists.txt  2025-01-19 16:04:22.731933455 +0100
@@ -163,6 +163,7 @@
         target_link_libraries(OrcaSlicer "-framework OpenGL")
     else ()
         target_link_libraries(OrcaSlicer -ldl)
+        target_link_libraries(OrcaSlicer -lX11 -lwebkit2gtk-4.1)
     endif ()
     #if (WIN32)
     #    find_library(PSAPI_LIB NAMES Psapi)
